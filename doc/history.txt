-25/06/22:
    *   (Armando) despues de batallar durante buen rato cambie el modo de subir
        la libreria, siguiendo la guia de la pagina de python, ya esta subida
        la version 0.0.2, debo actualizar y probar si no hay problemas con las
        cosas que agregue a "math". (4:48pm)
    *   pues parece que la regue en algun import, lo corregire y probare de
        nuevo. (4:53pm)
    *   el error de importacion ha sido arreglado (cuando importemos funciones
        del modulo dentro del modulo utilizar PYLEJANDRIA.MODULO). (5:06pm)
    *   tambien cree la carpeta historial, asi podemos dejar las cosas que
        hicimos y poder tener un recordatorio, tambien, Javier, si lees esto no 
        olvides de explicar que cosas hiciste para en dado caso regresar el
        modulo con GIT y arreglar pedos, cuando tengas GIT vemos lo de como
        utilizar la rama "Dev" para evitar cagaderos como me paso con MAFER.
    *   Ya que Demian y Javier por sus razones no podian instalar GIT decidi
        instalarlo en la laptop roja y ya entendi como contribuir al codigo,
        los pasos son: (8:08pm)

            --- primera vez ---
            crear un "fork" del proyecto en la cuenta que va a contribuir
            git clone "repositorio"

            --- en cmd ---
            git pull (para tener la ultima version)
            git branch rama     (crear rama para no afectar la rama principal)
            git checkout rama   (cambiar a la nueva rama)

            --- realizar edicion ---
            git add .               (agregar los cambios)
            git commit -m "mensaje" (crear commit para guardar los cambios)
            git checkout main       (cambiar a la rama principal)
            git merge rama          (unir la rama a main para los cambios)
            git branch -D rama      (eliminar la rama)

            --- ir a GitHub ---
            *   crear un "pull request"
            *   esperar que @TheCodingStudent lo agregue (estoy buscando como
                hacer que cualquiera lo agregue)
    
    *   termine de documentar la clase Matrix y unas que otras
        correcciones. (8:33pm)

-26/06/22:
    *   (Armando) Decidi documentar de la manera mas extensa posible esta
        libreria, vi un tutorial de "Tec with Tim" sobre "type hinting", no
        afecta el codigo pero si te permite declarar de mejor manera que se
        espera recibir, aparte de que hay una libreria llama "mypy" que sirve
        para realizar analisis de datos, asi que puede que nos venga de perlas
        en el futuro. (8:54am)
    *   MATH y TOOLS ha sido debidamente documentado con los tipos de datos.
        Tambien estoy probando hacer un script que me facilite actualizar el
        repositorio de GitHub. (9:19am)
    *   El sistema para subir automaticamente a GitHub funciona de maravilla,
        ahora tiene algunos parametros: (9:58am)
            --  version x.x.x esto permite poner una version especifica, por
                default solo incrementa el ultimo numero
            --  GitHub (f, false, False) esto hace que no se suba a GitHub,
                puede ser util ü§∑‚Äç‚ôÇÔ∏è
            --  commit "mensaje" esto cambia el commit default "version x.x.x",
                para esas ocasiones donde hay que corregir peque√±os errores
            --  PyPi (f, false, False) lo mismo que --GitHub, yo que se, a este
                punto estoy agregando cosas por si acaso üòÇ
    *   Todo funciona como debe hasta el momento de introducir el usuario y
        contrase√±a en Twine, podria hacerle algo con keyboard pero de momento
        no me molesta por que me ahorra muchos pasos. Probare algo rapido si no
        asi lo dejare.
    *   NOTA: los commit no deben tener espacios en blanco, no se por que no lo
        reconoce como debe. (10:11am)
    *   NOTA: los commit ya pueden tener espacios vacios, al parecer me falto
        ponerle comillas al argumento para que cmd supiera que es un texto.
        (10:15am)
    *   Aunque no lo consideraba necesario documente "upload.py" para que no
        solo jesucristo sepa como funciona. Ademas quite algunas cosas de los
        modulos que importaba pero no usaba, probare el codigo para subir de
        manera completa. (10:26am)
    *   Trabajando en un tipo codigo que envio Demian me di cuenta de que
        cuando imprimes diccionarios es muy molesto tenerlo en una sola linea,
        asi que intentare hacer una funcion que lo imprima indentado. (10:40pm)
        [mi padre me rega√±o por estar tan tarde]
    *   La funcion "pretty_dict" funciona perfectamente, ya tiene parametros
        opcionales y todo. Procedo a subir. (11:01pm)

-27/06/22:
    *   (Armando) Al parecer ya no es necesario utilizar List, Dict... de la 
        libreria typing, esto ya esta por default en python 3.9 en adelante,
        asi que ahora sera necesario >=3.9 para PyLejandria, en este punto no
        me molesta, si fuera necesario podemos corregirlo facilmente y ya.
        (7:38am)
    *   He terminado de documentar en base a PEP8, utilice una pagina que te
        dice los errores que tiene "https://pep8online.com". 
        A continuacion los errores que tenia: (9:22am):
            -   todos los archivos deben llevar una linea en blanco al final
            -   hay que cuidar los espacios en blanco al final de las lineas
            -   debe haber una separacion de 2 lineas entre clases y funciones
            -   el operador de union "|" debe ir separado por espacios a ambos
                lados ( a | b )
            -   las lineas no deben pasar las 79 columnas
            -   var != None es incorrecto, debe usarse is None en su lugar
    *   Otro cambio fue que ahora se necesita python >=3.9, ya que ya no se
        necesita "typing" para list, dict, etc... Vere si Demian quiere
        corregir mi gramatica, crucemos los dedos. (9:25am)
    *   Documente en base PEP8 el "upload.py". (9:03pm)
    *   Las funciones prettify y pretty_dict ahora por default imprimen el
        resultado, pero tambien devuelven el string. (9:06pm)
    *   Gracias a una ocurrencia de Demian ha surgido el archivo "ideas.txt".
        (9:12pm)

-28/06/22:
    *   (Armando) Empiezo a creer que este proyecto solo existe gracias a mi,
        pero no me importa, la idea de tener un nuevo proyecto y aprender es
        suficiente como para seguir progrmando, aparte de ser terapeutico. El
        dia de hoy hare una nueva clase para Math llamada Symbol, la idea
        principal es emular lo que hace sympy y tener variables, esto surge de
        la platica con Demian de anoche. Sera la primera vez que pruebe crear
        otra rama, esto con la intencion de no llegar a cagarla. (11:28am)
    *   Symbol de momento tiene las funciones mas basicas, hay que ver como
        arreglar lo de dividir y toca crear una clase Polynomial. (1:14pm)
    *   Parece ser que el gym ayuda a resolver problemas en general, hasta este
        momento la clase Symbol y Polynomial estan bastante avanzadas, hay aun
        muchos detalles que pulir, agregar precaciones y errores custom,
        documentar, etc. Pero va bastante bien, aunque hace un momento surgio
        la idea de una clase Fraction, le dare algunas vueltas y si sale algo
        interesenta lo documentare aqui. (7:20pm)
    *   Habia un error en las funciones de tools, la idea era que
        automaticamente imprimieran pero no puse print. (7:26pm)
    *   Me encuentro muy cansado asi que hasta aqui llegare el dia de hoy.
        Armando del futuro, tienes esto pendiente: (7:32pm)

            -   modificar la clase Symbol o hacer otra clase para almacenar
                variables del tipo x^2y^3, ya que no es monomio ni polinomio
            -   agregar excepciones para que incluso tu sepas que te fue mal
            -   falta division de polinomios
            -   queda pendiente si la clase Fraction vale la pena

-29/06/22:
    *   (Armando) El dia de hoy aproveche para mejorar la terminal, ahora por
        default sera PowerShell. (8:47am).
    *   El archivo upload.py tenia un error al darle una version, ya esta
        corregido. Ahora solo se subiran los archivos de la nueva version,
        falta ver si esto hace que los modulos se suban mas rapido, no le veo
        caso subir los archivos una y otra vez. (9:19am)
    *   La herramienta para juntar imagenes en pdf me seria muy util, asi que
        lo agregare a tools y ma√±ana o mas tarde lo documento. (5:20pm)

-01/06/22:
    *   (Armando) Ayer no aparece actividad ya que he estado trabajando en la
        rama DEV, el dia de hoy agregue 2 funciones que surgieron al hacer el
        programa que saca los pdf del rpp. (8:35am)
    *   El uploadr tenia un error de direccion, tambien tuve que agregar la
        libreria "img2pdf" a las dependencias para que todo funcione como debe.
        Ya esta todo terminado, procedo a subir la version 0.0.13. (8:52am)
    *   Se mejoro la funcion image_to_pdf, ahora recibe muchos mas argumentos.
        Tambien agregue una funcion y variable global para generar los tipos
        de archivo, esto es para las ventanas de tkinter. (9:21am)
    *   Resulto mas facil mover el archivo graph de la rama DEV a la rama MAIN,
        pero debo aprender a como fusionar ramas que han sido modificadas. El
        archivo graph.py de momento es muy basica y necesita mas trabajo,
        reiniciare la rama DEV y trabajare ahi, intentare no trabajar en 2
        ramas al mismo tiempo. (9:39am)
    *   Ahora la funcion image_to_pdf regresa el path, puede ser util para
        cuando no lo especificas pero deseas usar despues. (10:24am)

-04/06/22:
    *   (Armando) Parece que puedo pasar cada vez mas tiempo sin programar,
        supongo que la emocion del proyecto esta empezando a morir, sumado a
        que todo parece indicar que Javier y Demian no ayudaran tan
        activamente, de igual manera seguire trabajando esporadicamente en el
        proyecto. La idea de hoy es agregar una funcion que facilite crear
        modulos para PyPi, creando la estructura necesaria, algo asi como el
        GIT init. (9:15am)
    *   Parece que funciona perfectamente, procedo a actualizar PyLejandria.
        (10:04am)
    *   upload.py tenia cosas que ya no se usan, asi que las quite. (10:05am)
    *   Faltaba obtener el directorio actual para poder subir los archivos por
        default. (10:22am)
    *   Tuve que agregar varias medidas de seguridad al uploader, tambien
        actualice el README, ahora el uploader esta listo para recibir un
        folder y subirlo a PyPi. Probando el PEP8 me di cuenta de que la
        estructura correcta para el match es:
            match(...): ‚úÖ      match (...): ‚ùå
                case(...):          case (...): ...
                    ...
    
    *   Agregue un ArgumentParser a tools, esto con la idea de simplicar la
        forma de obtener argumentos, argparse tenia algunas cosas que no me
        gustaban, ArgumentParser se accede como un diccionario y se configura
        igual que argparse, pero este si convierte a los tipos dados y tiene
        multiples precauciones, tambien estoy pensando en utilizar regex para
        validar strings, podria ser util.
    *   PEP8 indica que los modulos se deben importar en orden alfabetico,
        ya corregi eso.
    *   Multiples cosas simplificadas en todos los modulos.
    *   Tambien estoy pensando en una interfaz grafica para la herramienta
        uploader.
    *   Procedo a guardar y todas esas cosas. (6:41pm)

    *   Realice una interfaz grafica para el uploader, parece que funciona de
        momento, tambien implemente un sistema con el nuevo ArgumentParser de
        tools, procedere a probar. Tambien vi 1:30h de Harry Potter, asi que no
        he estado todo el tiempo programando. (10:03pm)
    *   Parece que no estaba todo perfecto, al final tambien converti el
        uploader en una clase para que en dado caso pueda ser importado, tal
        vez funcione mejor como modulo, como sea esta listo para poder
        utilizarce como modulo. (11:20pm)
    *   La gente que no programa no entendera por que me quedo hasta las
        11:40pm viendo texto y escribiendo, pero yo estoy orgulloso de lo que
        hice el dia de hoy. Tuve que arreglar algunos problemas con seleccionar
        alguna carpeta que no tenga un paquete, ya esta arreglado y varias mas
        optimizaciones. (11:41pm)
    *   Es todo por hoy. (11:48pm)

-06/07/22:
    *   (Armando) Hoy es el aniversario numero 20 de mis padres, asi que
        celebraremos creando una herramienta que corrija mi codigo, la idea es
        aparte de tener un corrector PEP8 automatico, analizar que componentes
        serian utiles para gui.py, si surge algo interesante entonces creare el
        modulo. (8:18am)
    *   A√±adida la clase Window. (8:35am)
    *   Ahora hay un TextArea que permite mostrar el numero de linea. (9:18am)
    *   Primera version de gui documentada y corregida. (9:24am)
    *   TextArea esta siendo mejorada con mas funciones. (9:57am)
    *   Al final el corrector PEP8 tiene funciones simples de momento, despues
        puedo agregarle mas reglas gramaticales, gui termino de ser documentado
        y de momento no se me ocurre mas que agregarle, supongo que cuando
        tenga otro proyecto podre ver si necesito mas cosas. (12:27pm)
    *   Corregido upload.py. (12:35pm)
    *   Corregido tools.py. (12:36pm)
    *   Corregido module.py.
    *   Corregido math.py. (12:44pm)
    *   Procedo a subir. (12:45pm)
    *   Automagicamente queriendo evitar un error usando un try parece haber
        solucionado el problema de copy paste de TextArea. (5:19pm)
    *   Le a√±adi al uploader la posibilidad de eliminar o no los archivos de la
        carpeta Dist, no le veo caso en tener cada version mas y mas archivos,
        en caso de ser necesarios podemos verlos en los commits y ya. (6:10pm)

-07/07/22:
    *   (Armando) Definitivamente este archivo tambien seguira la regla de
        maximo 80 caracteres, para poder actualizar al mismo tiempo que
        escribo codigo.
    *   Hoy hice un "cheat sheet" para Markdown, quiero mejorar el README de
        PyLejandria, tambien baje una extension para ver en tiempo real como
        luciria.
    *   Decidi actualizar todo el historial para que tenga maximo 80
        caracteres, estoy pensando la manera de que un programa de manera
        automatica lo haga, el problema son los tabs, aun no se como contarlos
        con regex, supongo que en el peor de los casos tendre que hacer un 
        programa mas complejo en python.
    *   Me voy al gimnasio. (2:44pm) [me duele la espalda y me siento cansado]
    *   Mi padre se quedo hablando con interceramic, asi que le agregue al
        uploader el hecho de que al no subir a PyPi, el combobox de borrar
        versiones anteriores se desactiva. (2:50pm)
    *   Hora de embellecer el proyecto. (5:45pm)
    *   Graph.py de momento no lo tengo claro, hasta que me de una inspiracion
        lo devolvere a la vida, en el transcurso tal vez haga herramientas que
        me ayuden en su desarrollo. (5:48pm)
    *   Actualizadas las dependencias. (5:52pm)
    *   Me estoy quedando dormido, ya quite pygame de los requerimentos.
        (6:16pm)
    *   Module.py actualizado con funciones de PyLejandria. (6:32pm)
    *   Ahora los modulos tendran una funcion example, con la finalidad de que
        sea sencillo empezar a usarlo, puede ser tambien una interfaz grafica
        con todos los atributos y ayudas, aun no lo se. (6:47pm)
    *   Voy a probar que pasa si pongo cosas en el __init__. (6:53pm)
    *   Termine el README, lo subire para ver que tal y hare posteriores
        correcciones. (7:14pm)
    *   Parece ser que el uploader tiene un error cuando cancelas la subida a
        PyPi, lo corregire y subire. (7:17pm)
    *   El README se ve mucho mejor que el primero, pero aun le faltan cosas,
        ademas tengo que descubrir como hacer que tambien aparezca en PyPi.
        (7:21pm)
    *   En teoria el README se mostrara en PyPi. (7:30pm)
    *   El pyproject.toml estaba mal escrito, todo deberia volver a funcionar
        como debe. (7:37pm)
    *   Todo esta perfecto, el README ya quedo como yo queria. (7:58pm)
    *   Veamos si ahora funciona el __init__. (8:21pm)
    *   Resulta que olvide que solo la carpeta src se sube. Asi que no puedo
        acceder al historial, tal vez ma√±ana pruebe algo de web scrapping para
        bajarlo de GitHub, aun que necesitarias internet. (8:27pm)
    *   Ya esta arreglado el __init__, ya pensare que cosas divertidas le
        agrego, por hoy es todo por que me estoy quedando dormido. (8:37pm)

-08/07/22:
    *   (Armando) Hoy tambien hay que trabajar en el ba√±o, ma√±ana saldre con
        Javier y el domingo no se que hagamos, asi que tengo hoy entre ratitos
        y despues del gym para programar. Hoy la idea es hacer el modulo de
        ayuda, debe de tomar el nombre de alguno de los modulos instalados y
        mostrar la informacion que este tenga. (8:17am)
    *   El funcionamiento basico del ayudante esta listo, ahora tengo que
        mejorar la descripcion de los modulos. (9:46am)
    *   Cambios de Type Hint. (2:47pm)
    *   gui ahora tiene un widget Hierarchy, permite crear arboles de jerarquia
        para visualizar cosas anidadas, sera de utilidad para el help. (4:37pm)
    *   Javier sugirio imprimir el arbol de jerarquia utilizando pretty_dict,
        resulto que solo funcionaba con diccionarios anidados, asi que ahora
        tambien existe el pretty_list, hace lo mismo pero con iterables, y en
        conjunto ya pueden representar cualquier diccionario. Tambien algunas
        correcciones al Hierarchy fueron hechas.(5:40pm)
    *   No me gustaba tener una excepcion especifica para cada cosa, asi que
        ahora simplemente usare NotImplementedError, sera igualmente
        identificable. (5:44pm)
    *   FILETYPES y su respectiva funcion estaban en tools, ya fueron cambiadas
        a gui y tambien se mejoro el codigo de la funcion image_to_pdf.
        (5:52pm)
    *   Por alguna razon habia una clase Complex en math. (5:53pm)

-09/07/22:
    *   (Armando) Hoy fui a desayunar con Loretto, Susana, Aron y Javier, debo
        checar el organizador de Javier a ver que rollo, antes de eso agregare
        unas funciones que surgieron mientras platicabamos. (8:17pm)
    *   Sigo trabajando en lo de Javier, y resulta que gui tiene un error en la
        funcion ask, no toma en consideracion si hay tipos o no. (9:58pm)
    *   Lo de Javier fue castroso de hacer debugging, era probar y rezar por
        que algo no fallara, pero ya esta al parecer, sorteo la carpeta de la
        universidad perfectamente y renombro varios archivos con mismo nombre.
        Resulta que pretty_list tenia el argumento _print en False por alguna
        razon, ya esta en True. (11:15pm)
    *   Ma√±ana queda pendiente hacerle UI al organizar, ahora que lo hice yo es
        mas sencillo.

-10/07/22:
    *   (Armando) Termine la UI de el organizador de Javier, funciona mejor de
        lo que esperaba y quedo estetico, si me dan ganas de programar podria
        crear una clase Style para gui y asi customizar de manera sencilla toda
        la interfaz, tambien agregue todas las extensiones que Javier tenia en
        el organizador, de esa manera ahora ask tiene muchas mas extensiones.
        Vere si sigo progrmando o no, al cabo es domingo. (2:16pm)
    *   El helper aun sigue pendiente flojo. (2:38pm)
    *   Vere Stranger Things como se debe, y aparte documente bien la clase
        Hierarchy. (3:26pm)
    *   Aun mas extensiones y algunas correcciones. (4:08pm)
    *   Hice una funcion especial para crear multiples directorios y maneja la
        posibilidad de que existan. (4:24pm)
    *   Son las 5:58pm y siento que no puedo hacer lo del dise√±o, estoy
        bloqueado, supongo que terminare el FlatButton y sera todo por hoy.
    *   El boton ya se actualiza y es configurable, va un poco lento pero otro
        dia descubrire por que. No subire nada. (6:32pm)

-11/07/22:
    *   (Armando) Hoy toca quitar el azulejo del ba√±o, papa esta en eso en este
        momento, mientras no puedo ayudarle veo una cosa de numero telefonico
        con Javier y me dio varias ideas para gui. (8:59am)
    *   Agregando las extensiones de telefono me di cuenta de que podrian haber
        conflictos entre librerias, asi que habra un nuevo archivo llamado
        constants, de ahi todos los modulos tomaran referencia y nos ahorramos
        importaciones ciclicas. (9:46am)
    *   Ya todas las constantes fueron movidas, tambien la clase PhoneEntry
        esta medio decente, la subire para que Javier pueda usarla. (10:31am)
    *   Gui ya fue actualizado y al parecer si le sirvio a Javier, yo no creo
        llegar a utilizarlo en un proyecto, pero uno nunca sabe y fue una buena
        practica. Version 0.1.7 ya esta subida. (11:24am)
    *   PhoneEntry ha recibido mas argumentos, como la posibilidad de crear un
        boton con nombre personalizado y asignarle comandos, esto es util para
        interactuar con la clase; constants ya fue agregado al __init__, he
        actualizado las ideas y corregido uno que otro error, y documente
        PhoneEntry. (12:41pm)
    *   Gui ahora sigue PEP8. (12:45pm)
            - Falta documentar el FlatButton y acabarlo
    *   De manera milagrosa por fin descubri como cargar las librerias desde la
        carpeta tests, asi que no mas archivos fuera. Ire a ba√±arme. (2:15pm)
    *   Descartare la idea de utilizar el metodo de importacion, genera una
        carpeta __pycache__ no es mala, pero me es molesta y no es necesaria,
        seguiran los experimentos fuera de la carpeta y cuando ya funcionen los
        pasare a la carpeta. (3:40pm)
    *   FlatButton murio, no se adapta a lo que quiero, lo mejor sera crear el
        sistema de estilo y customizar lo mejor que pueda lo que ya viene en
        tkinter por defecto. (3:59pm)
    *   Llevo mucho rato queriendo hacer mi propia guia de widgets de tkinter,
        asi que hare un archivo que al ejecutarse muestre todos los widgets,
        de esa manera puedo ir probando el sistema de estilos. (4:02pm)
    *   Acabo de tener una inspiracion para el estilo, una funcion que tome
        como argumentos el widget a crear y despues una variable con un dise√±o
        predeterminado que habra en gui, pero tambien se podria crear su propio
        dise√±o, aun que perderia el chiste de que 'sea rapido'. (4:32pm)
    *   Sin querer termine con un formato mas o menos parecido a CSS, un
        diccionario con nombres y propiedades y estas se aplican a los widgets,
        la funcion style puede tomar un widget y decorarlo o se le puede
        indicar el nombre de un widget e incluso de que libreria es, voy a
        documentarla y "call it a day". (5:47pm)
    *   Ya esta documentado y corregi un error, me di cuenta de que name era
        mejor si lo dejaba como argumento opcional, asi que tuve que actualizar
        el codigo de prueba, tambien renombre la carpeta "tests" a "UI", ya que
        ya no eran pruebas, y las pruebas las tengo que hacer fuera entonces se
        explica mejor. Dejare el archivo de "new_gui" para que en dado caso
        Javier lo vea y pruebe con su aplicacion. (6:05pm)

-12/07/22:
    *   (Armando) No se a que hora hice el modulo "auto", pero el caso es que
        ahi iran las funciones de automatizacion, por ejemplo ahora hacer una
        interfaz que mande correos sera muy sencillo. Creo que me acostare, lo
        necesito de verdad. (4:35pm)

-15/07/22:
    *   (Armando) Hoy estoy muy cansado como para ponerme con algo serio, en
        cuanto tenga tiempo me ire a dormir, ahorita a las 10am hay que ir con
        Vector para cortarnos el cabello y despues supongo que vamos a
        trabajar. Con Javier se nos ocurrio el "dict_zip". (7:36am)
    *   Supongo que trabaje todo el dia y solo pude programar a ratitos, hice
        la funcion dict_zip, y mayormente me dedique a editar VSCODE, editando
        el archivo JSON de configuracion logre tener un tema como el de Jarvis
        que hice hace mucho tiempo pero sin tener que descargar nada, es
        editable en cualquier momento y quedo mucho mejor que la vez anterior
        creo yo. Tambien encontre una extension que genera documentacion de
        manera automatica, supongo que con el tiempo ire cambiando a ese
        formato, o no ¬øquien sabe? üòÇ. Vere que cositas mas hago antes de ir a
        dormir, aun que se acaban de bajar 2 episodios de Moon Knight y quiero
        verlos. Sigo pensando en lo de los archivos tkinter, no se si manejar
        el estilo y el esqueleto en un mismo archivo (como si fuera CSS y HTML)
        o tener 2 extensiones ¬øyo que se? anda a ver Moon Knight, estas muy
        cansado. (6:58pm)
    *   Estoy subiendo los capitulos a la USB y mientras subia los archivos, y
        me di cuenta de que en lugar de usar Combobox podria usar Checkable,
        literalmente esta dise√±ado para ser seleccionado ü§¶‚Äç‚ôÇÔ∏è. En fin, otro dia
        sera, tambien me entro la idea de terminar lo de los archivos tkinter
        para hacer una UI a la nueva funcion de email. Pensare en ello durante
        la noche. (7:05pm)
    *   No pude evitarlo y ya esta corregido el modulo auto en base PEP8. Solo
        tuve 2 errores üéÇ. (7:07pm)

-16/07/22:
    *   (Armando) He perdido todas las ganas para construir, ya no quiero, pero
        no hay de otra, hoy tengo planeado hacer lo de los archivos tkinter, se
        me acaba de ocurrir una buena idea. (8:36am)
    *   Por fin me ba√±e y cene, estoy exhausto, durante el dia estuve
        intentando lo del archivo de tkinter pero nada funcionaba, entonces
        decidi enfocarme en el trabajo y ahorita cenando me llego la idea
        millonaria, basicamente ubicar los widgets, extraer los argumentos
        entre widgets y transformar a un diccionario. De ahi en mas no hice
        nada que no fuera destruir mi cuerpo üòÇüòÇ. Moon Knight estuvo
        increible, estoy considerando en hacerle caso a Miriam con sus
        recomendaciones. Ma√±ana ire a comer a Fifties, asi que no espero tener
        algo nuevo para programar, pero en dado caso seguire con lo de tkinter.
            - Pendiente: crear la jerarquia de los widgets
        Supongo que no puedo seguir posponiendo este cansancio. (9:45pm)

-17/07/22:
    *   (Armando) Hoy desperte a las 12pm, hacia meses que no me pasaba eso, en
        fin, Fifties estuvo delicioso, hoy tengo ganas de programar mientras
        veo Spy x Family. Seguire con lo de los archivos tkinter. (3:39pm)
    *   Bueno, resulta que se me ocurrio una funcion para crear tuplas de items
        segun una lista, esto sera util para casos donde necesitas acceder a
        items proximos y hacer un "for i in range(len(list)-length)" es muy
        molesto, asi que ya lo arregle, pero tengo que subirlo para seguir
        trabajando. (4:22pm)
    *   Spy x Family esta muy bien. (4:47pm)
    *   - Armando: Okey Armando, tenemos un problema
        - Angel: Claro, dime
        - Armando: Basicamente tenemos que crear los widgets previos para poder
        ir creando los posteriores, supongo que obviamente el primero es el que
        no tiene padre y puede ser creado sin problemas.
        - Angel: Despues ya con la lista de widgets podemos usar la direccion,
        ya que al ser objetos tienen direcciones diferentes y nos evitamos
        problemas
        - Armando: O tambien podemos usar un indice para que al cambio de tabs
        basados en la lista de widget_names

        Asi es mas o menos como se ve cuando resuelvo un problema. (4:54pm)
    *   Hay que actualizar la funcion pair. (5:17pm)
    *   Pues la regue y hay problemas de importacion circular, vuevlo a subir
        entonces. (5:24pm)
    *   Ahora el uploader no depende de pylejandria, para situaciones como esta
        ya que no me permite usarlo :(. (5:27pm)
    *   Por fin funciona!!! Despues de 10 episodios de Spy x Family ya el lado
        de dise√±o ya esta, ya puedo descansar, basicamente ya estan los metodos
        de acomodo de objetos y propiedades. (9:51pm)
            - Pendiente: hacer el lado funcional.
        Ahorita en llamada con Javier se me ocurrio pasar las funciones en un
        diccionario, de esa manera tengo el nombre para referirme en el archivo
        tk y tambien puedo acceder a ella de manera sencilla, y no de la manera
        pendeja de Javier (jaja saludos). (9:56pm)
    *   El lado funcional resulto todo un exito, la idea del diccionario y la
        referencia fue una gran idea. (10:07pm)

-18/07/22:
    *   (Armando) Hoy no documente nada en la ma√±ana, no tuve tiempo literal,
        ahorita me puse con lo del archivo tk, reestructure toda la funcion
        load para que fuera mas entendible, incluso a√±adi comentarios (que
        despues quitare). Tambien a√±adi un poco mas de reglas de sintaxis para
        el lado funcional, pasar argumentos ya funciona de maravilla. Queda
        pendiente el sistema de identificacion para hacer referencia dentro del
        archivo. (9:32pm)
    *   El sistema de ids ya funciona a la perfeccion, tuve que actualizar el
        parser y agregar una funcion para buscar widgets y levantar un error si
        es necesario. Basicamente se accede con # para referenciar el id.
        Ahora falta crear interfaces para ver que hay que mejorar. (10:12pm)
    *   Ya gui fue corregido con PEP8, procedo a subirlo y a dormir. (10:20pm)

-19/07/22:
    *   (Armando) Hoy no tenia planeado programar por que estoy muriendo, pero
        durante la noche no me sacaba de la cabeza la idea de que podia ser mas
        util pasar __file__ que un diccionario y facilitaria algunas cosas, asi
        que ya esta. Tuve que agregar una funcion para cargar modulos a tools
        y obviamente edite gui, voy a subir el proyecto para probar que todo
        funcione bien. (1:37pm)
    *   Pues esta subido ya hice varias pruebas y parece funcionar, Javier dijo
        que lo probare, veremos que procede. (2:05pm)
    *   Empezare a escribir la documentacion para esta funcion, ya que es medio
        especial. (2:06pm)
    *   Pues ya esta listo el manual de los archivos tk, tambien le di una
        customizacion al README, y corregi alguna cosas de la funcion load que
        estaban por ahi. (3:52pm)
    *   Me emocione y quise poner color al README y resulta que GitHub no
        acepta colores, asi que los quite y corregi unas cosas del codigo de
        python. (4:03pm)
    *   Me ire a acostar, pero antes de eso a√±adi ahora la posibilidad de que
        la funcion load acepte un parametro parent, esto para que ahora tambien
        puedan usarse cualquier widget, no se, como crear un boton custom. Se
        me acaba de ocurrir en que puedas tambien acceder a widgets que hayas
        creado en el archivo python. (4:44pm)
    *   Pues gracias al nuevo sistema de importacion fue muy sencillo acceder
        a los nuevos widgets. (4:50pm)
    *   Hay una nueva funcion para obtener slices de una lista, eso junto con
        la funcion pair funciona muy para casos donde hay listas de listas,
        tambien hice unos cambios al parser de la funcion load y ahora acepta
        muchos mas parametros gracias a regex. (6:28pm)
    *   El __init__ fue editado para no crear archivos .pyc, pero parece que
        hace el de el de igual manera. (6:36pm)
    *   Hice unas peque√±as reducciones de codigo a gui, ahora queda pensar en
        como a√±adir un archivo de estilo. (6:48pm)
    *   En teoria me iba a dormir pero se me ocurrio el escenario donde tuviera
        que pasar parametros asi nomas sin llamar una funcion, como en el caso
        de bind, asi que tuve que hacer unas mejoras al sistema de parser,
        ahora hay una funcion dedicada a extraer los parametros dentro de
        parentesis, esto permite reutilizarce de manera sencilla. (10:08pm)

-20/07/22:
    *   (Armando) Hoy fue un dia ocupado, logre hacer muchas cosas pero no tuve
        tiempo para documentar en tiempo real, asi que supongo que listare lo
        que hice hoy.
            -   rehice el sistema de parser, ahora son solo 3 funciones, una
                principal que toma casos complejos y 2 auxiliares que manejan
                atributos y listas respectivamente.
            -   a√±adi el comando execute, sirve para ejecutar algun codigo al
                finalizar de crear el widget, esto es util para casos donde
                se tenga que repetir varias cosas, como por ejemplo tener 3
                binds, ahora solo haces 3 executes en lugar de una sintaxis de
                listas compleja.
            -   cree un widget llamado TextSpan, su funcion principal es crear
                multiples etiquetas en cierto orden, esto surgio gracias a que
                rehice el uploader utilizando el sistema de archivos tk (ahora
                que lo pienso necesito un mejor nombre que "archivos tk"), todo
                salio bastante bien.
            -   dentro de las cosas que mejore gracias a clonar el uploader
                esta el a√±adir varias reglas de sintaxis, tambien que se pueden
                acceder a funciones, clases y variables sin problemas, tambien
                estuve pensando en lo repetitivo que es poner grid en cada
                widget, asi que estaba viendo la posibilidad de una propiedad
                nueva o en dado caso nuevas clases como Row o Column, el chiste
                es que el widget automaticamente sepa como se colocan los
                widgets, y haria vas facil el sistema de posicionamiento, por
                ejemplo podrias tener un sistema Column y dentro multiples
                Rows, asi pudiendo hacer un tipo tabla.
            -   estoy barajando la idea de algun tipo de generador, el problema
                principal es como acceder desde el archivo tk, el problema es
                que el archivo es estatico y se necesita una funcion para
                hacerlo dinamico.
            -   como acto final subire esto a PyPi y a GitHub con el clon de
                uploader, no pretendo reemplazar el original, pero fue un buen
                ejercicio. (8:59pm)

-21/07/22:
    *   (Armando) Hoy no se me ocurre algo interesante para programar, asi que
        me puse a ver lo de los snippets, y aunque hice uno para facilitarme la
        plantilla de pygame, no pude hacer algo interesante para los archivos
        tk, mi idea sigue siendo tener un sistema estilo emmet. Si se me ocurre
        algo interesante ahorita lo documento, lo que si cheque varios archivos
        en base PEP8 y los corregi. (3:09pm)
    *   Okey, empiezo esta nueva rama "Parser" y yo creo el nombre queda muy
        claro, probare un nuevo sistema para parsear los atributos del archivo
        tk, usare todo lo que aprendi haciendo CHP