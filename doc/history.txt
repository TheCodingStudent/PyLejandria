-25/06/22:
    *   (Armando) despues de batallar durante buen rato cambie el modo de subir la libreria, siguiendo la guia de la pagina de python,
        ya esta subida la version 0.0.2, debo actualizar y probar si no hay problemas con las cosas que agregue a "math". (4:48pm)
    *   pues parece que la regue en algun import, lo corregire y probare de nuevo. (4:53pm)
    *   el error de importacion ha sido arreglado (cuando importemos funciones del modulo dentro del modulo utilizar PYLEJANDRIA.MODULO). (5:06pm)
    *   tambien cree la carpeta historial, asi podemos dejar las cosas que hicimos y poder tener un recordatorio, tambien, Javier, si lees esto no 
        olvides de explicar que cosas hiciste para en dado caso regresar el modulo con GIT y arreglar pedos, cuando tengas GIT vemos lo de como
        utilizar la rama "Dev" para evitar cagaderos como me paso con MAFER.
        * Ya que Demian y Javier por sus razones no podian instalar GIT decidi instalarlo en la laptop roja y ya entendi como contribuir al codigo,
        los pasos son: (8:08pm)

            --- primera vez ---
            crear un "fork" del proyecto en la cuenta que va a contribuir
            git clone "repositorio"

            --- en cmd ---
            git pull (para tener la ultima version)
            git branch rama     (crear rama para no afectar la rama principal)
            git checkout rama   (cambiar a la nueva rama)

            --- realizar edicion ---
            git add .               (agregar los cambios)
            git commit -m "mensaje" (crear commit para guardar los cambios)
            git checkout main       (cambiar a la rama principal)
            git merge rama          (unir la rama a main para los nuevos cambios)
            git branch -D rama      (eliminar la rama)

            --- ir a github ---
            crear un "pull request"
            esperar que @TheCodingStudent lo agregue (estoy buscando como hacer que cualquiera lo agregue)
    
    *   termine de documentar la clase Matrix y unas que otras correcciones. (8:33pm)

-26/06/22:
    *   Decidi documentar de la manera mas extensa posible esta libreria, vi un tutorial de "Tec with Tim" sobre "type hinting", no afecta
        el codigo pero si te permite declarar de mejor manera que se espera recibir, aparte de que hay una libreria llama "mypy" que sirve
        para realizar analisis de datos, asi que puede que nos venga de perlas en el futuro. (8:54am)
    *   MATH y TOOLS ha sido debidamente documentado con los tipos de datos. Tambien estoy probando hacer un script que me facilite actualizar
        el repositorio de GitHub. (9:19am)
    *   El sistema para subir automaticamente a GitHub funciona de maravilla, ahora tiene algunos parametros: (9:58am)
            --version x.x.x esto permite poner una version especifica, por default solo incrementa el ultimo numero
            --github (f, false, False) esto hace que no se suba a GitHub, puede ser util ü§∑‚Äç‚ôÇÔ∏è
            --commit "mensaje" esto cambia el commit default "version x.x.x", para esas ocasiones donde hay que corregir peque√±os errores
            --pypi (f, false, False) lo mismo que --github, yo que se, a este punto estoy agregando cosas por si acaso üòÇ
    *   Todo funciona como debe hasta el momento de introducir el usuario y contrase√±a en Twine, podria hacerle algo con keyboard pero
        de momento no me molesta por que me ahorra muchos pasos. Probare algo rapido si no asi lo dejare.
